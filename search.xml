<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python在字符串前补零]]></title>
    <url>%2F2019%2F10%2F11%2FPython%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%89%8D%E8%A1%A5%E9%9B%B6%2F</url>
    <content type="text"><![CDATA[用于对不规则字符串（如命名）进行转换。 zfill() &amp; rjust()Python zfill() 方法返回指定长度的字符串，原字符串右对齐，前面填充0。 1str.zfill(width) Python rjust() 返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串。如果指定的长度小于字符串的长度则返回原字符串。 width – 指定填充指定字符后中字符串的总长度. fillchar – 填充的字符，默认为空格。 1str.rjust(width[, fillchar]) 示例： 1234img_name = "1011"print(img_name.zfill(6))print(img_name.rjust(6, '0')) 输出： 12001011001011 补充补充特殊情况。 1234img_name = "1011"print(img_name.zfill(1))print(img_name.rjust(1, '0')) 输出： 1210111011 rjust()可使用单个字符对字符串进行补足。另外有rjust()， Python也提供有ljust()。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu中NVIDIA驱动安装]]></title>
    <url>%2F2019%2F10%2F08%2FUbuntu%E4%B8%ADNVIDIA%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Ubuntu系统中本身不带有英伟达显卡驱动，然而如果需要安装CUDA、CUDNN则必须有驱动支持。 获取显卡支持驱动的版本https://www.nvidia.com/Download/index.aspx 提供该显卡目前版本驱动 https://www.geforce.cn/drivers 提供该显卡支持的所有驱动 通过以上两个网址可以获得显卡支持的驱动版本信息以及驱动下载。相对来说比较推荐采用第二个网址取获得多个版本的驱动，因为新版驱动相对支持的CUDA以及模型较少。 关于是否需要禁用Nouveau这里先提前讨论一下关于网上教程一般会提到的禁用Nouveau问题。Nouveau是第三方的开源NVIDIA驱动。然而目前也有教程上提过一些方法安装驱动不需要禁用Nouveau与图形界面。之前的配置经验中确实也有过在不禁用情况下，成功安装了驱动。因此，是否禁用Nouveau，是否会因此造成什么样的问题，目前还不好定论。 安装驱动这里介绍三种安装Nvidia驱动的方法，可以根据自己的需要进行安装。 使用标准Ubuntu库安装驱动 检测显卡型号以及推荐的驱动： 1ubuntu-drivers devices 从此命令中可以获得显卡所支持的驱动版本，包括系统推荐的驱动版本。 如果选择安装推荐的驱动版本，则也直接使用命令： 1sudo ubuntu-drivers autoinstall 如果想自己选择安装的版本，则可以使用： 1sudo apt install nvidia-version 重启系统。 使用PPA库安装驱动PPA为Personal Package Archives的缩写，即个人软件包档案。 Personal Package Archives（个人软件包档案）是Ubuntu Launchpad网站提供的一项服务，允许个人用户上传软件源代码，通过Launchpad进行编译并发布为2进制软件包，作为apt/新立得源供其他用户下载和更新。在Launchpad网站上的每一个用户和团队都可以拥有一个或多个PPA。 使用PPA库可安装不稳定版本的Beta驱动。 添加PPA库至系统中： 12sudo add-apt-repository ppa:graphics-drivers/ppasudo apt update 后续步骤可参考3.1中步骤1-3。 手动安装NVIDIA官方网站中驱动 识别NVIDIA VGA卡： 1lshw -numeric -C display 或者： 1lspci -vnn | grep VGA 从官方网站中下载驱动。 禁用默认的Nouveau驱动。 将Nouveau驱动加入黑名单。 12sudo bash -c "echo blacklist nouveau &gt; /etc/modprobe.d/blacklist-nvidia-nouveau.conf"sudo bash -c "echo options nouveau modeset=0 &gt;&gt; /etc/modprobe.d/blacklist-nvidia-nouveau.conf" 验证新modprobe config文件内容： 1cat /etc/modprobe.d/blacklist-nvidia-nouveau.conf 应显示： 12blacklist nouveauoptions nouveau modeset=0 更新Kernel initramfs： 1sudo update-initramfs -u 重启系统： 1sudo reboot 验证Nouveau是否已经禁用： 1lsmod | grep nouveau 无显示则已经禁用。 此步骤之前确保系统已经重启并禁用Nouveau。暂停图形界面： 1sudo telinit 3 按CTRL+ALT+F1进入TTY1会话，并使用用户名与密码登录。 启用驱动安装： 1bash NVIDIA-Linux-x86_64-version.bin 重启系统。 验证驱动是否安装安装完成后，可通过NVIDIA X Server Settings验证驱动版本。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu中typora安装]]></title>
    <url>%2F2019%2F10%2F07%2FUbuntu%E4%B8%ADtypora%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Markdown编辑器与阅读器。 安装1234wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -sudo add-apt-repository 'deb https://typora.io/linux ./'sudo apt-get updatesudo apt-get install typora MarkdownMarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。 菜鸟教程 https://www.runoob.com/markdown/md-tutorial.html]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu中sublime text安装]]></title>
    <url>%2F2019%2F10%2F07%2FUbuntu%E4%B8%ADsublime-text%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[用于日常代码编写，以及文本查看。 安装（Stable）12345wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -sudo apt-get install apt-transport-httpsecho "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.listsudo apt-get updatesudo apt-get install sublime-text 显示编辑器中空格显示空格在于方便检查python等语法的严格缩进。同样适用于Windows下。 菜单中选择Preferences，Settings。在settings-User中添加 1"draw_white_space": "all"]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu中apt源与pip源替换]]></title>
    <url>%2F2019%2F10%2F03%2FUbuntu%E4%B8%ADapt%E6%BA%90%E4%B8%8Epip%E6%BA%90%E6%9B%BF%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[Advanced Packaging Tool (apt) 是Linux下的安装包管理工具。Pip 是 Python 包管理工具,该工具提供了对Python 包的查找、下载、安装、卸载的功能。更换源的必要性在于提高各种包的下载速度。 Apt源更换为阿里镜像源进入ubuntu“软件与更新”。ubuntu软件分页中，“下载自”选项选择使用http://mirros.aliyun.com/ubuntu 阿里云镜像源。 Pip源更换为清华源修改 ~/.pip/pip.conf (没有可自行创建)，修改index-url至tuna，内容如下： 12[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple Conda源更换为清华源输入如下两行命令： 12conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --set show_channel_urls yes]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Pip</tag>
        <tag>Conda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu系统安装]]></title>
    <url>%2F2019%2F10%2F02%2FUbuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Ubuntu16.04 LTS安装记录。 通过国内镜像获得系统镜像文件访问网易开源镜像站 http://mirrors.163.com/ 获得 ubuntu-16.04.6-desktop-amd64.iso 文件。 刻录引导盘使用Rufus https://rufus.ie/en_IE.html 将ISO文件刻入至所选择U盘。刻入过程将使U盘格式化。 进入主机Bios并设置U盘启动项开机时进入Bias界面，不同型号主板Bias不同。 华硕TUF主板 开机按Del或F2进入Bias。 进入Advanced Mode。 选择Boot并进入Secure Boot。 将OS Type修改为Windows UEFI mode。 进入Key Management， 选择Clear Secure Boot Keys关闭Secure Boot。 返回初始Bias界面，通过Boot Menu选择U盘路径进行启动。 安装系统语言推荐初始选择英语，防止出现英文路径不匹配情况。 安装过程推荐选择不联网安装，减少因为网络问题安装时间的延长。 系统安装分为双系统安装与单系统安装。 先了解系统安装中系统分区中，各分区思路。 [分区：主分区] [格式：Ext4] [挂载点：/] [空间起始位置] 系统分区。 [分区：逻辑分区] [格式：] [挂载点：swap] [空间起始位置] 当使用所有RAM容量时，操作系统需要释放一些RAM，并且需要一个位置来将被选择的被释放的信息保留在RAM中，这就是所谓的交换空间。 交换空间通常是硬盘中的特殊分区，与计算机的RAM容量成正比。对于少于8GB的RAM：使用2或3倍的RAM量。对于超过8gb且小于64gb：使用1到1.5倍的RAM量。超过64gb：4gb的互换或完全没有交换。 [分区：逻辑分区] [格式：Ext4] [挂载点：/boot] [空间起始位置] 用于系统引导。 [分区：逻辑分区] [格式：Ext4] [挂载点：/home] [空间起始位置] 存储分区。 Windows与Ubuntu双系统策略双系统安装，推荐在安装好Windows系统后，再启动Ubuntu安装程序。在安装引导程序中，直接选择保留Windows安装Ubuntu选项（不考虑前面所提分区策略，使用安装程序默认分配方案）。因为两个系统所采用的文件格式不相同，在Windows系统下，无法查看到Ubuntu系统分区以及文件。而Ubuntu系统则可以与Windows共用挂载盘。因此在之后如果出现需要在Windows系统下再次调整分区时，要特别注意该特性。 之后安装程序将引导对Windows与Ubuntu两个系统的磁盘空间进行分配。注意如果安装过程中没有出现磁盘空间分配过程，应为分区出现问题。需中断当前安装，检查当前的分区情况。此过程中分配与Ubuntu的空间，为Ubuntu系统主分区。之后Ubuntu可使用Windows挂载分区作为逻辑分区。 Ubuntu单系统策略推荐自定义分区，在Ubuntu系统需要重装时，重新分配系统分区是非常有帮助的。 目前个人的分区方案： [分区：主分区] [格式：Ext4] [挂载点：/] [空间起始位置] [分配空间：0.65*(500g-32gb-200mb)] [分区：逻辑分区] [格式：] [挂载点：swap] [空间起始位置] [分配空间：32gb] [分区：逻辑分区] [格式：Ext4] [挂载点：/boot] [空间起始位置] [分配空间：200mb] [分区：逻辑分区] [格式：Ext4] [挂载点：/home] [空间起始位置] [分配空间：0.35*(500g-32gb-200mb)]]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo引入本地相对路径图片]]></title>
    <url>%2F2019%2F10%2F02%2FHexo%E5%BC%95%E5%85%A5%E6%9C%AC%E5%9C%B0%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[在Blog中将原先使用外链引入的图片改为本地引入图片。 相对路径引用将Hexo站点配置文件_config.yml中post_asset_folder属性改为true。 这时假使我们创建新post， 1hexo new post_name 我们将在_post文件夹下获得post_name.md文件以及post_name文件夹。post_name文件夹用于存储引入的图片。同时在post_name.md中引入图片： 1&#123;% asset_img img_name img_alt %&#125; 为什么不使用![]方法Hexo本身使用![]方法插入图片是没有问题的， 1![img_alt](img_name) 在post下也可正常显示。然而在next主题中，如加入read more功能时，主页中图片的路径会因为使用相对路径而无法正常显示。因此此时选择使用hexo3新方法：{}。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[仿淘宝登录网页编写]]></title>
    <url>%2F2016%2F10%2F16%2F%E7%99%BB%E5%BD%95%E7%BD%91%E9%A1%B5%E7%BC%96%E5%86%99%2F</url>
    <content type="text"><![CDATA[HTML+CSS+javascript Set Up WebStorm DetailWebStorm一款JavaScript 开发工具。被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等。与IntelliJ IDEA同源，继承了IntelliJ IDEA强大的JS部分的功能。 HTML一种超文本标记语言，标准通用标记语言下的一个应用。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link href="bootstrap-3.3.5-dist/css/bootstrap.min.css " rel="stylesheet"&gt; &lt;link href="styles.css" rel="stylesheet"&gt; &lt;link href="js.js" rel="stylesheet"&gt; &lt;script language="JavaScript" src="js.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="top"&gt; &lt;img src="logo.png"&gt;&lt;/div&gt;&lt;div class="mid"&gt; &lt;div class="midin"&gt; &lt;form class="login"&gt; &lt;div class="title"&gt;&lt;b style="display: block;" id="login_txt"&gt;用户登录&lt;/b&gt; &lt;div class="alert alert-danger" id="alert_warn" &gt; &lt;img src="error.png" alt="warn"&gt; &lt;b id="warn_txt"&gt;&lt;/b&gt; &lt;/div&gt; &lt;div class="alert alert-success" id="alert_success"&gt; &lt;b&gt;&amp;nbsp;登录成功&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="input-group"&gt; &lt;span class="input-group-addon" &gt; &lt;span class="glyphicon glyphicon-user"&gt; &lt;/span&gt; &lt;/span&gt; &lt;input type="text" class="form-control" value=" 账号（手机号）" id="username" onFocus="if(value==defaultValue)&#123;value='';this.style.color='#000'&#125;" onBlur="if(!value)&#123;value=defaultValue;this.style.color='#c2a599';&#125;" style="color:#999999; font-family: 'Microsoft YaHei UI'; width: 260px" maxlength="11" onkeyup="this.value=this.value.replace(/\D/g,'')" onafterpaste="this.value=this.value.replace(/\D/g,'')"&gt; &lt;/div&gt; &lt;div class="input-group"&gt; &lt;span class="input-group-addon"&gt; &lt;span class="glyphicon glyphicon-lock"&gt; &lt;/span&gt; &lt;/span&gt; &lt;input type="text" class="form-control" value=" 密码" name="input_psw" oninput="pswInputting()" id="password" onFocus="if(value==defaultValue)&#123;value='';this.style.color='#000'&#125;" onBlur="if(!value)&#123;value=defaultValue;this.style.color='#c2a599';&#125;" style="color:#999999; font-family: 'Microsoft YaHei UI'; width: 260px" maxlength="32"&gt; &lt;/div&gt; &lt;button class="btn" type="button" onclick="setTimeout($tip(), 200);" id="btn_submit"&gt;登 录&lt;/button&gt; &lt;a href="#" id="forget"&gt;忘记密码&lt;/a&gt; &lt;a href="#" id="reg"&gt;免费注册&lt;/a&gt; &lt;/form&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class="bottom"&gt; &lt;hr&gt; &lt;div class="b1"&gt; &lt;a href="#"&gt;阿里巴巴集团&lt;/a&gt; | &lt;a href="#"&gt;阿里巴巴国际站&lt;/a&gt; | &lt;a href="#"&gt;阿里巴巴中国站&lt;/a&gt; | &lt;a href="#"&gt;全球速卖通&lt;/a&gt; | &lt;a href="#"&gt;淘宝网&lt;/a&gt; | &lt;a href="#"&gt;天猫&lt;/a&gt; | &lt;a href="#"&gt;聚划算&lt;/a&gt; | &lt;a href="#"&gt;一陶&lt;/a&gt; | &lt;a href="#"&gt;阿里妈妈&lt;/a&gt; | &lt;a href="#"&gt;淘宝旅行&lt;/a&gt; | &lt;a href="#"&gt;虾米&lt;/a&gt; | &lt;a href="#"&gt;阿里云计算&lt;/a&gt; | &lt;a href="#"&gt;云OS&lt;/a&gt; | &lt;a href="#"&gt;万网&lt;/a&gt; | &lt;a href="#"&gt;支付宝&lt;/a&gt; | &lt;a href="#"&gt;来往&lt;/a&gt; | &lt;hr&gt; &lt;/div&gt; &lt;div class="b2"&gt; &lt;div class="b21"&gt; &lt;a href="#"&gt;关于淘宝&lt;/a&gt; &lt;a href="#"&gt;合作伙伴&lt;/a&gt; &lt;a href="#"&gt;营销中心&lt;/a&gt; &lt;a href="#"&gt;廉政举报&lt;/a&gt; &lt;a href="#"&gt;联系客服&lt;/a&gt; &lt;a href="#"&gt;开放平台&lt;/a&gt; &lt;a href="#"&gt;诚征英才&lt;/a&gt; &lt;a href="#"&gt;联系我们&lt;/a&gt; &lt;a href="#"&gt;网站地图&lt;/a&gt; &lt;a href="#"&gt;法律声明&lt;/a&gt; @2016 Taobao.com 版权所有 &lt;/div&gt; 网络文化经营许可证； 网文网[2010]040号 | &lt;span id="zengzhi"&gt;增值电信业务经营许可证：浙B2-20080224-1 | 信息网络传播许可证：1109364&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; CSS一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111.body&#123; margin: 0; padding: 0;&#125;.top&#123; width: 1200px; height: 80px; margin:0 auto 0 auto; padding:15px 0 15px 0;&#125;.mid&#123; height: 600px; background: url("login-bg.jpg") no-repeat center;&#125;.blank&#123; height: 70px;&#125;.bottom&#123; width: 1200px; margin: 0 auto 0 auto;&#125;.b1&#123; height: 44px;&#125;.b1 a&#123; color: #666;&#125;.b2&#123; height: 60px;&#125;.b21&#123; height: 30px;&#125;.b21 a&#123; color:#555555&#125;#zengzhi&#123; color: #333;&#125;.login&#123; float: right; width: 350px; height: 350px; background-color: #f1f6ff; margin-top: 100px; border-radius: 5px;&#125;.midin&#123; width: 1200px; margin: 0 auto 0 auto;&#125;.title&#123; margin: 35px 20px 35px 20px;&#125;.input-group&#123; margin: 0 20px 30px 20px; height: 40px;&#125;.input-group input&#123; height: 40px;&#125;.btn&#123; width: 310px; background-color: #f84e4e; margin:0 20px 30px 20px; font-family:"黑体"; color:white;&#125;.btn:hover&#123; background-color: #f89999; color:white;&#125;#forget&#123; float: left; margin-left: 20px; color:#555555;&#125;#reg&#123; float: right; margin-right: 20px; color:#555555;&#125;#alert_warn&#123; display: none; hegiht: 27px; margin-right: 11px; padding: 0px;&#125;#alert_warn img&#123; width: 22px; hegiht: 22px; color:white;&#125;#alert_warn b&#123; color: #ff2624; font-size: smaller; font-weight: 700; font-size: 15px;&#125;#alert_success&#123; display: none; height: 27px; margin-right: 11px; padding: 0px;&#125;#alert_success b&#123; color: #1d8031; font-size: smaller; font-weight: 700; font-size: 15px;&#125; javascript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980function pswInputting() &#123; var psw_input = document.getElementsByName("input_psw").item(0); var str = psw_input.value; if (str.length != 0) &#123; if (str == " 密码") &#123; return; &#125; psw_input.type = "password"; &#125; else &#123; psw_input.type = "text"; &#125;&#125;function $tip()&#123; var username = document.getElementById("username"); var password = document.getElementsByName("input_psw").item(0); var reg = /^0?1[3|4|5|8][0-9]\d&#123;8&#125;$/; var login_txt = document.getElementById("login_txt"); var warn_txt = document.getElementById("warn_txt"); var block = document.getElementById("alert_warn"); var block_success = document.getElementById("alert_success"); var btn = document.getElementById("btn_submit"); btn.style.color = "#ffffff"; btn.blur(); var flag; setTimeout("", 200); if (username.value == " 账号（手机号）" || username.value == "") &#123; warn_txt.innerHTML = "&lt;strong&gt;账户不能为空！&lt;/strong&gt;"; flag = 1; &#125; else if (!reg.test(username.value)) &#123; warn_txt.innerHTML = "&lt;strong&gt;账户为11位有效手机号！&lt;/strong&gt;"; flag = 2; &#125;else if (password.value == " 密码" || password.value == "") &#123; warn_txt.innerHTML = "&lt;strong&gt;密码不能为空！&lt;/strong&gt;"; flag = 4; &#125; else if (username.value != "13012345678") &#123; warn_txt.innerHTML = "&lt;strong&gt;用户尚未注册！&lt;/strong&gt;"; flag = 3; &#125; else if (password.value != "123456") &#123; warn_txt.innerHTML = "&lt;strong&gt;密码错误！&lt;/strong&gt;"; flag = 5; &#125; else &#123; block.style.display = "none"; block_success.style.display = "block"; login_txt.style.display = "none"; flag = 6; &#125; setTimeout("reset()", 3000); switch (flag) &#123; case 1: case 2: case 3: block_success.style.display = "none"; login_txt.style.display = "none"; block.style.display = "block"; var elem = document.getElementById("username"); elem.focus(); break; case 4: case 5: block_success.style.display = "none"; login_txt.style.display = "none"; block.style.display = "block"; var elem = document.getElementById("password"); elem.focus(); break; case 6: break; &#125;&#125;function reset() &#123; var login_txt = document.getElementById("login_txt"); var block = document.getElementById("alert_warn"); var block_success = document.getElementById("alert_success"); login_txt.style.display = "block"; block.style.display = "none"; block_success.style.display = "none";&#125; Problems and SolutionsCSS盒子模型网页设计中常听的属性名：内容(content)、填充(padding)、边框(border)、边界(margin)， CSS盒子模式都具备这些属性。这些属性我们可以用日常生活中的常见事物——盒子作一个比喻来理解，所以叫它盒子模式。CSS盒子模型就是在网页设计中经常用到的CSS技术所使用的一种思维模型。 内容（CONTENT）就是盒子里装的东西；而填充(PADDING)就是怕盒子里装的东西（贵重的）损坏而添加的泡沫或者其它抗震的辅料；边框(BORDER)就是盒子本身了；至于边界(MARGIN)则说明盒子摆放的时候的不能全部堆在一起，要留一定空隙保持通风，同时也为了方便取出。在网页设计上，内容常指文字、图片等元素，但是也可以是小盒子（DIV嵌套），与现实生活中盒子不同的是，现实生活中的东西一般不能大于盒子，否则盒子会被撑坏的，而CSS盒子具有弹性，里面的东西大过盒子本身最多把它撑大，但它不会损坏的。填充只有宽度属性，可以理解为生活中盒子每个HTML标记都可看作一个盒子；]]></content>
      <categories>
        <category>Front-end</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[静态博客搭建]]></title>
    <url>%2F2016%2F10%2F03%2F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Github+Git+Hexo+NexT+Markdown Set Up Node.js Git DetailGithub一个面向开源及私有软件项目的托管平台,只支持Git。在Github上注册用户，并新建repository(username.github.io)。 Git一款免费、开源的分布式版本控制系统。在站点目录（本地blog文件夹)右键Git Bash here。 123$ git init //初始一个Git仓库$ git config --global user.name 'yourname' //首次需设置账户$ git config --global user.email 'youremail' //首次设置账户邮箱 配置SSH Keys。 12$ ssh-keygen -t rsa -C youremail@example.com //生成SSH Key$ cd~/.ssh //检查本机的ssh密钥 将公钥文件中内容复制到Github账号的SSH Key中。 1$ ssh git@github.com //检查是否连接 后面操作大部分在Git上执行。 Hexo一个简单、快速、强大的博客发布工具，支持Markdown格式。 123$ npm install -g hexo //安装Hexo$ hexo init //在本地初始搭建一个Hexo博客$ hexo server //在本地(localhost:4000)查看博客 修改站点(blog文件夹）配置文件(_config.yml)。 1234deploy: type: git repository: git@github.com:username/username.github.io.git branch: master 继续Hexo部署。 1234$ npm install hexo-deployer-git --save //安装hexo-deployer-git$ hexo clean //清除缓存$ hexo g //生成静态网页$ hexo d //部署到远程Github 静态博客基本搭成。 NexT精于心，简于形。一个好看的Hexo博客主题，iissnan/hexo-theme-next 12$ cd your-hexo-site //进入你的站点目录$ git clone https//github.com/iissnan/hexo-theme-next themes/next//从Git上克隆主题（适用所有从从Git上克隆库的方法） 修改站点配置文件。 1theme: next 关于NexT主题配置等可以查看NexT使用文档。 Markdown一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Hexo新建文章：在your-hexo-site/source/_posts目录下新建.md文件。 Problems and Solutions安装Hexo问题注意Node.js与Hexo版本是否相符。 win10系统版本问题因win10版本以及Hexo版本问题，在执行命令与站点配置文件修改上面都有些许不同，应根据自己的情况加以调整（此篇blog皆为本机的处理情况）。 404问题最需要注意的是自己账号（username）是否与repository的username.github.io相符。 远程博客与本地查看不相符，出现乱码问题根据分析此问题应该出在Github远程网页更新上，如果本地查看博客网页没有出现错误，就需要等待时间刷新网页之后恢复正常。 Markdown语法问题要注意所有的标记符号后一定要空格。 Addition克隆远程仓库和提交申请 1$ git clone git@github.com:username/hellogit.git 1234$ git add yourfile$ git commit -m "yourcommit"$ git remote add origin git@github.com:username/hellogit.git$ git push -u origin master]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
